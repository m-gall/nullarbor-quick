#!/bin/bash
#PBS -P STM_LM_NGS
#PBS -l select=1:ncpus=10:mem=32GB
#PBS -l walltime=00:01:00
#PBS -q small-express



################################################################################################
# Shell script to execute a modified version of nullarbor
# Author: Mailie Gall
# Date: May 2019
# Acknowledgements: This is a hack of Nullarbor v1.3 written by Torsten Seeman.
# Description:
# This wrapper script is the entry-point for versions of nullarbor which have been modified for faster execution.
# This includes switching off the following tools, which are not use by CIDM, and slow down the analysis:
# - roary
#
# The nullarbor perl script has been split into 'isolate' vs 'population-level' analyses. This allows the isolate analysis to be scattered across
# cpus, and then gathered for execution once these analyses are complete.
# Please be forgiving - this is not an elegant, true parallel solution but an ugly hack.

module load nullarbor/2.0

CPU=10

export KRAKEN_DEFAULT_DB='/project/data/kraken/minikraken_20141208'

wkdir="/scratch/RDS-FSC-TRG_STM_Val-RW/nullarbor-fast/"

cd $wkdir

input="/scratch/RDS-FSC-TRG_STM_Val-RW/nullarbor-fast/inputlist.tsv"
outputdir="/scratch/RDS-FSC-TRG_STM_Val-RW/nullarbor-fast/output/"
reference="/scratch/RDS-FSC-TRG_STM_Val-RW/Mailie_GBS/CP010867.fa"
project_name="population"

NULLABOR_HOME="/scratch/RDS-FSC-TRG_STM_Val-RW/nullarbor-fast/v2.0/bin"

echo [$(date +"%m/%d/%y  %H:%M:%S")] Nullarbor fast population-level analyses started

perl ${NULLABOR_HOME}/nullarbor-fast-population.pl --name $project_name --input /scratch/RDS-FSC-TRG_STM_Val-RW/nullarbor-fast/inputlist.tsv --outdir $outputdir --ref $reference --cpus $CPU --force --run;
